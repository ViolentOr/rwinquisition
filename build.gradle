buildscript {
    ext {
        kotlinVersion = '1.2.30'
        springBootVersion = '2.0.0.RELEASE'
        //todo: update to 2.9.5 when released. due to https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-32111
        jacksonVersion = '2.9.4+'
        assertjVersion = '3.9.1'
        jupiterVersion = '5.1.0'
        gradleVersionPluginVersion = '0.17.0'
        kotlinTestVersion = '2.0.7'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
        classpath "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        classpath "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
        classpath "com.github.ben-manes:gradle-versions-plugin:${gradleVersionPluginVersion}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: "com.github.ben-manes.versions"

group = 'me.violentor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-webflux"
    compile 'org.springframework.session:spring-session-core'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile 'org.springframework.boot:spring-boot-devtools'
    runtime 'com.h2database:h2'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'io.projectreactor:reactor-test'
    testCompile "org.assertj:assertj-core:${assertjVersion}"
    testCompile "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
    testCompile "io.kotlintest:kotlintest:${kotlinTestVersion}"
}

jacocoTestReport {
    reports {
        html.enabled = false
        xml.enabled = true
        csv.enabled = false
    }
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}